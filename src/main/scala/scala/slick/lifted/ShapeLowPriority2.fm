package scala.slick.lifted

trait ShapeLowPriority2 {
  @inline
  implicit final def tuple1Shape[Level <: ShapeLevel, M1, U1, P1](implicit u1: Shape[_ <: Level, M1, U1, P1]): Shape[Level, Tuple1[M1], Tuple1[U1], Tuple1[P1]] =
    new TupleShape[Level, Tuple1[M1], Tuple1[U1], Tuple1[P1]](u1)
<#list 2..22 as i>
  @inline
  implicit final def tuple${i}Shape[Level <: ShapeLevel, <#list 1..i as j>M${j}<#if i != j>,</#if></#list>, <#list 1..i as j>U${j}<#if i != j>,</#if></#list>, <#list 1..i as j>P${j}<#if i != j>,</#if></#list>](implicit <#list 1..i as j>u${j}: Shape[_ <: Level, M${j}, U${j}, P${j}]<#if i != j>, </#if></#list>): Shape[Level, (<#list 1..i as j>M${j}<#if i != j>,</#if></#list>), (<#list 1..i as j>U${j}<#if i != j>,</#if></#list>), (<#list 1..i as j>P${j}<#if i != j>,</#if></#list>)] =
    new TupleShape[Level, (<#list 1..i as j>M${j}<#if i != j>,</#if></#list>), (<#list 1..i as j>U${j}<#if i != j>,</#if></#list>), (<#list 1..i as j>P${j}<#if i != j>,</#if></#list>)](<#list 1..i as j>u${j}<#if i != j>,</#if></#list>)
</#list>
}
